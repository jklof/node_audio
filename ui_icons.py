import logging
from PySide6.QtWidgets import QApplication
from PySide6.QtGui import QIcon, QPixmap, QPalette
from PySide6 import QtSvg
from PySide6.QtCore import QByteArray

logger = logging.getLogger(__name__)


LOGO_SVG_DATA = """<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 4725.713 5000" enable-background="new 0 0 4725.713 5000" xml:space="preserve">
<g>
<path fill="currentColor" d="M4435.801,850.253c-96.859,11.08-170.31,77.908-253.005,127.69c29.491-143.79,37.872-281.595-34.547-423.566
c-8.998,42.396-9.035,42.344-30.722,57.912c-165.458,118.769-192.377,270.84-243.549,288.467
c-87.468-195.444-207.432-346.639-449.06-356.795c92.133,88.204,129.6,197.245,152.814,309.56
c69.306,335.316-61.515,497.581,28.439,730.404c30.161,78.063,107.113,121.228,182.91,103.876
c-3.6,31.014-27.338,43.004-48.185,56.085c-99.785,62.617-6.574,97.608-53.947,141.112
c-162.329,149.07-130.391,111.12-351.211,188.495c-42.281,14.815-86.017,21.973-129.673,30.33
c-86.429,16.547-47.716-134.537-140.531-452.849c-63.516-217.839-3.523-251.686-67.25-350.851
c-115.706-180.046-281.21-96.606-435.293-232.834c-64.254-56.809-84.254-117.024-49.195-203.797
c31.671,13.52,45.287,164.978,233.809,234.039c164.29,60.183,298.855,32.264,374.281,199.981
c58.499,130.083-20.524,271.645,10.064,410.78c22.453,102.126,62.092,197.661,107.734,290.754
c31.913,65.088,34.097,63.913,105.313,40.936c1.115-0.36,111.331-27.396,153.253-59.553
c-7.382-74.785-46.802-139.172-62.218-213.858c54.835,13.573,93.625,54.661,149.517,35.215
c51.045-17.76,80.926-55.73,76.482-108.466c-154.64,167.503-181.736-208.879-295.749-414.901
c142.389-6.932,182.25-13.973,173.073-65.866c-43.198,30.208-43.021,29.221-86.255,10.333
c-23.031-10.062-41.061-24.719-56.021-44.131c-177.323-230.091-181.938-225.258-171.049-250.864
c217.136,174.946,320.45,110.463,318.015,12.216c-138.656,62.456-207.528-83.371-312.552-209.932
c40.89-6.094,71.016,12.605,104.009,13.626c84.397,2.612,101.893-10.636,113.609-95.532
c-111.952,51.474-135.888-6.543-245.519-134.979c-32.339-37.887-78.575-58.029-121.848-89.921
c98.477-40.33,177.71-101.589,255.481-163.772c137.033-109.567,251.718-23.095,294.732-28.534
c-301.419-225.555-454.583,109.132-710.7-1.221c-153.162-65.992-307.66-277.737-595.657-219.971
c-184.294,36.966-183.978,71.071-281.633,269.383c-9.718,19.733-18.44,40.039-19.66,63.162
c-4.385,83.082-33.756,150.879-117.761,180.749c4.152,34.629,38.943,47.787,43.985,77.06c3.178,22.69-32.074,13.748-28.309,35.869
c6.501,18.805,34.648,26.58,31.813,44.251c-6.539,40.765,24.198,53.009,46.716,70.096
c-15.967,77.263,18.605,112.691,95.209,100.216c44.938-7.318,65.745-27.942,86.006-11.332
c-3.328,52.547-12.563,105.934-5.851,159.023c10.075,79.698-58.433,122.137-137.174,136.775
c-120.403,22.382-328.232,79.097-358.406,198.323c-65.766,259.86-2.765,245.997-65.046,392.6
c-39.139,92.129-77.355,184.071-86.649,285.105c-2.091,22.732-12.866,39.626-37.122,41.434
c-85.595,6.38-167.426,39.635-424.433-98.988c-29.689-16.014-59.531-30.606-50.762-74.587
c1.626-8.156-42.136-71.587-53.889-101.746c-30.68-78.727-98.199-38.894-165.102-117.957
c102.792-13.224,343.439,39.209,335.51-311.634c-8.179-361.968-96.393-523.655,86.457-742.185
c39.951-47.745,132.566-54.806,157.959-63.858c-111.109-56.164-157.748-27.742-254.492,10.24
c-256.253,100.605-283.654,310.792-308.432,313.58c-69.294-89.34-138.822-178.983-211.639-272.867
c-36.456,118.979-101.548,218.241-121.93,333.214c-14.302,1.746-23.912-4.408-33.391-9.983
C333.987,849.008,123.551,754.072,0,804.294c56.906,33.116,99.858,72.676,125.573,127.779
c53.213,114.025,105.455,228.226,136.936,351.043c33.47,130.574,90.363,309.798,189.327,401.303
c44.863,41.483,99.142,54.629,161.47,51.105c-11.144,43.26-7.242,77.98,24.603,106.067c16.847,14.859,14.441,36.04,14.685,56.89
c0.905,77.57,47.774,109.39,118.461,80.013c83.218-34.585,94.581-155.424,24.048-191.35
c-38.198-19.456-73.127-45.333-113.369-70.829c26.228-7.076,44.519,13.411,65.303,2.347c11.534-12.713-5.161-32.354,12.623-47.462
c23.926,32.952,32.351,76.604,66.728,100.544c84.77,59.034,51.145,215.885-62.86,243.995c-8.933,2.203-18.531,2.439-24.51,14.462
c-1.705,49.497,16.269,99.418,12.473,151.816c-11.775,162.577-23.369,324.78-67.879,482.958
c-27.997,99.495-42.313,202.969-77.973,300.174c-51.926,141.544-88.521,288.728-177.936,708.892
c-43.597,204.863-69.045,408.779-4.893,614.676c228.883,734.61,1116.5,923.066,1633.535,418.302
c241.282-235.554,244.1-475.806,281.98-490.599c24.299,29.223,36.91,163.115,138.036,316.472
c481.607,730.354,1565.771,586.833,1802.282-308.731c92.821-351.478-66.482-571.414-134.768-860.42
c-93.674-396.449-227.61-765.353-220.416-1349.246c0.519-42.106,12.059-66.691,48.883-81.157
c110.516-43.418,74.985-171.769,89.562-192.641c293.552-56.775,248.386-232.518,470.877-704.668
c60.617-128.637,149.011-156.598,192.931-207.741C4621.494,800.6,4529.269,839.561,4435.801,850.253z M2116.126,479.081
c-60.21-7.716,19.816-106.069,29.729-27.07C2141.437,468.156,2134.833,481.479,2116.126,479.081z M2630.631,1556.989
c12.113,0,21.083,9.9,21.607,21.607c0.522,11.669-10.305,21.607-21.607,21.607c-12.113,0-21.083-9.9-21.607-21.607
C2608.501,1566.927,2619.329,1556.989,2630.631,1556.989z M2064.295,1560.745c0.153-0.478,0.308-0.958,0.476-1.446
c0.385,0.153,0.766,0.306,1.146,0.459c3.155-1.755,6.708-2.769,10.313-2.769c12.113,0,21.083,9.9,21.607,21.607
c0.523,11.669-10.305,21.607-21.607,21.607c-12.113,0-21.083-9.9-21.607-21.607
C2054.297,1571.301,2058.407,1564.682,2064.295,1560.745z M1681.352,4172.076c-166.917,202.845-448.175,222.713-648.466,52.332
c-63.748-54.229-97.481-123.688-130.345-195.791c-189.772-416.347,1.795-836.788,24.602-1652.74
c2.719-97.297,10.535-194.579-27.79-290.343c-16.733-41.813-25.281-92.074-19.205-141.186
c29.843,23.987,34.448,57.742,37.922,89.716c7.68,70.689,21.738,65.677,377.175,268.779
c70.683,40.391,185.578,8.775,292.094,57.073c21.364,9.687,29.351-7.81,40.098-19.923
c137.186-154.625,105.778-376.387,243.28-671.439c26.411,400.911,46.72,367.715,91.719,702.47
c13.254,98.586-98.657,162.096-208.366,436.134C1499.094,3444.056,1937.579,3860.698,1681.352,4172.076z M2064.114,1764.541
c-118.048-48.677-160.41-109.885-149.513-236.789c1.567-18.256-7.159-35.933,0.3-57.571c27.004,19.841,33.45,45.562,26.715,72.812
c-30.667,124.06,103.288,237.99,218.077,193.187c10.944-4.271,27.51-16.231,37.675,7.25
C2155.725,1771.803,2116.113,1785.983,2064.114,1764.541z M2330.654,2579.656c-16.101,15.573-46.76-20.674-12.251-55.914
c5.831,3.161,10.529,4.077,11.538,6.518C2336.668,2546.543,2347.364,2563.493,2330.654,2579.656z M2442.594,513.961
c-21.185,104.504-68.422,208.898-144.634,135.042c26.099-8.933,52.957,2.628,66.469-28.131
c20.495-46.656,58.391-87.294,44.562-144.296c-6.336-26.118-31.732-9.698-45.898-19.148c34.081-37.8,56.935-35.034,75.159,7.889
C2445.051,481.329,2446.059,496.868,2442.594,513.961z M3303.083,4342.467c-304.773-38.417-443.201-286.631-392.688-596.078
c27.448-168.146,42.442-337.911,65.916-506.581c20.619-148.163-10.998-294.193-87.622-427.361
c-55.203-95.938-109.594-192.036-174.511-282.145c-74.934-104.012-7.18-369.272,26.354-493.151
c33.73-124.598,46.94-252.278,58.088-381.084c-42.339,71.359-80.325,146.1-176.365,148.975
c-61.977,1.855-114.15-21.292-148.294-75.675c7.506-10.997,15.341-8.648,20.419-3.537
c102.505,103.175,270.801,23.302,283.136-140.087c3.017-39.961,6.961-81.177,27.616-117.412c5.197-9.118,8.272-21.44,22.331-24.275
c11.267,13.549-2.547,23.279-6.77,33.221c-15.208,35.799-21.389,77.176-5.23,108.092c85.031,162.694,110.117,827,271.446,803.096
c82.424-12.212,163.332-29.048,240.34-64.537c94.698-43.641,374.09-181.051,398.435-282.654
c8.604-35.907,22.347-70.621,34.557-105.606c4.787-13.714,9.372-28.625,27.678-31.815c12.597,13.154,5.928,27.624,1.604,40.716
c-19.749,59.79-31.42,122.062-58.132,179.786c-48.985,105.852-38.94,498.014-12.402,645.054
c8.262,45.78,9.289,92.105,10.379,138.347c2.484,105.263-144.067,59.544-180.879-33.904
c-71.505-181.519,17.256-350.421-4.476-608.354c-30.874-21.796-54.326,25.448-182.224,77.329
c-59.759,24.241-22.555,100.878-74.101,228.386c-68.526,169.512-220.949,194.816-236.879,390.569
c7.883-2.131,13.598-2.577,13.805-3.89c21.157-134.3,167.809-164.947,248.114-224.508
c-21.344,174.822-76.97,349.885,119.66,539.612c92.214,88.978,238.562,44.065,253.25,218.145
c61.914-241.766-347.064-169.335-277.234-577.098c0.459-2.683,5.255-4.624,11-9.36c82.883,91.708,175.059,157.229,307.129,82.028
c15.742,27.561,15.719,57.407,18.108,85.401c17.158,201.092,54.702,399.643,73.304,600.658
C3850.142,4020.668,3658.451,4387.262,3303.083,4342.467z M3836.554,1779.925c-7.108,33.666-5.245,67.041,22.24,92.578
c25.921,24.084,54.445,44.015,96.169,40.201c-13.732,37.814-34.318,39.352-61.92,25.189
c-138.661-71.152-83.348-183.241-34.249-302.376c19.254,23.829,13.464,45.137,16.165,64.443
c43.131,5.999,81.02-26.607,121.615-7.368C3999.564,1743.394,3854.246,1696.112,3836.554,1779.925z"/>
</g>
</svg>
"""


# --- Inline SVG Icon Data ---
# Using "currentColor" as a placeholder to be replaced by the theme's text color.
ICONS = {
    "new_file": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
        <polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line>
        <line x1="9" y1="15" x2="15" y2="15"></line></svg>""",
    "open_folder": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path></svg>""",
    "save": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
        <polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg>""",
    "play": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polygon points="5 3 19 12 5 21 5 3"></polygon></svg>""",
    "stop": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect></svg>""",
    "zoom_in": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        <line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line></svg>""",
    "zoom_out": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        <line x1="8" y1="11" x2="14" y2="11"></line></svg>""",
    "zoom_fit": """<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline>
        <polyline points="21 15 21 21 15 21"></polyline><polyline points="3 9 3 3 9 3"></polyline></svg>""",
}


def _create_colored_svg(svg: str, color: str) -> QByteArray:
    """
    A simple utility to inject a fill color into the SVG logo data.
    """
    # Replace the "currentColor" placeholder with the actual color
    colored_svg = svg.replace("currentColor", color)
    return QByteArray(colored_svg.encode("utf-8"))


def create_colored_logo(color: str) -> QByteArray:
    """
    Returns the SVG logo data with the specified color.
    """
    return _create_colored_svg(LOGO_SVG_DATA, color)


def create_icon(icon_name: str) -> QIcon:
    """
    Creates a QIcon from raw SVG data string, dynamically setting its color
    to match the application's text color for theme awareness.
    """
    app = QApplication.instance()
    hex_color = "#ffffff"  # Default to white
    if app:
        text_color = app.palette().color(QPalette.ColorRole.ButtonText)
        hex_color = text_color.name()

    colored_svg_data = _create_colored_svg(ICONS.get(icon_name), hex_color)

    pixmap = QPixmap()
    if not pixmap.loadFromData(colored_svg_data, "svg"):
        logger.warning("Failed to load SVG icon.")
    return QIcon(pixmap)
